//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DataFetchAPI.WebRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ECommerce_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce")]
    public partial class ECommerce : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetItemImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToWishListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestHelpOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromWishlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToCartFromWishlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrderNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnShowpassOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBLOBCustomerStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderShipmentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRunJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotWEmailPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRandomizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ECommerce() {
            this.Url = global::DataFetchAPI.Properties.Settings.Default.DataFetchAPI_WebRef_ECommerce;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetItemImageCompletedEventHandler GetItemImageCompleted;
        
        /// <remarks/>
        public event AddToCartCompletedEventHandler AddToCartCompleted;
        
        /// <remarks/>
        public event CheckOutCompletedEventHandler CheckOutCompleted;
        
        /// <remarks/>
        public event CreateCustomerAccountCompletedEventHandler CreateCustomerAccountCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event GetCustomerStatementCompletedEventHandler GetCustomerStatementCompleted;
        
        /// <remarks/>
        public event RemoveFromCartCompletedEventHandler RemoveFromCartCompleted;
        
        /// <remarks/>
        public event AddToWishListCompletedEventHandler AddToWishListCompleted;
        
        /// <remarks/>
        public event RequestHelpCompletedEventHandler RequestHelpCompleted;
        
        /// <remarks/>
        public event RemoveFromWishlistCompletedEventHandler RemoveFromWishlistCompleted;
        
        /// <remarks/>
        public event AddToCartFromWishlistCompletedEventHandler AddToCartFromWishlistCompleted;
        
        /// <remarks/>
        public event GenerateInvoiceCompletedEventHandler GenerateInvoiceCompleted;
        
        /// <remarks/>
        public event SendOrderNotificationCompletedEventHandler SendOrderNotificationCompleted;
        
        /// <remarks/>
        public event ForgotPasswordCompletedEventHandler ForgotPasswordCompleted;
        
        /// <remarks/>
        public event FnShowpassCompletedEventHandler FnShowpassCompleted;
        
        /// <remarks/>
        public event FnBLOBCustomerStatementCompletedEventHandler FnBLOBCustomerStatementCompleted;
        
        /// <remarks/>
        public event GetOrderShipmentStatusCompletedEventHandler GetOrderShipmentStatusCompleted;
        
        /// <remarks/>
        public event FnRunJobsCompletedEventHandler FnRunJobsCompleted;
        
        /// <remarks/>
        public event ForgotWEmailPasswordCompletedEventHandler ForgotWEmailPasswordCompleted;
        
        /// <remarks/>
        public event FnRandomizeCompletedEventHandler FnRandomizeCompleted;
        
        /// <remarks/>
        public event FnRegisterCompletedEventHandler FnRegisterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:GetItemImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="GetItemImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemImage(string itemNo) {
            object[] results = this.Invoke("GetItemImage", new object[] {
                        itemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string itemNo) {
            this.GetItemImageAsync(itemNo, null);
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string itemNo, object userState) {
            if ((this.GetItemImageOperationCompleted == null)) {
                this.GetItemImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemImageOperationCompleted);
            }
            this.InvokeAsync("GetItemImage", new object[] {
                        itemNo}, this.GetItemImageOperationCompleted, userState);
        }
        
        private void OnGetItemImageOperationCompleted(object arg) {
            if ((this.GetItemImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemImageCompleted(this, new GetItemImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:AddToCart", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="AddToCart_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddToCart(string customerNo, string productId, decimal quantity) {
            object[] results = this.Invoke("AddToCart", new object[] {
                        customerNo,
                        productId,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToCartAsync(string customerNo, string productId, decimal quantity) {
            this.AddToCartAsync(customerNo, productId, quantity, null);
        }
        
        /// <remarks/>
        public void AddToCartAsync(string customerNo, string productId, decimal quantity, object userState) {
            if ((this.AddToCartOperationCompleted == null)) {
                this.AddToCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToCartOperationCompleted);
            }
            this.InvokeAsync("AddToCart", new object[] {
                        customerNo,
                        productId,
                        quantity}, this.AddToCartOperationCompleted, userState);
        }
        
        private void OnAddToCartOperationCompleted(object arg) {
            if ((this.AddToCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToCartCompleted(this, new AddToCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:CheckOut", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="CheckOut_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckOut(string customerNo) {
            object[] results = this.Invoke("CheckOut", new object[] {
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOutAsync(string customerNo) {
            this.CheckOutAsync(customerNo, null);
        }
        
        /// <remarks/>
        public void CheckOutAsync(string customerNo, object userState) {
            if ((this.CheckOutOperationCompleted == null)) {
                this.CheckOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOutOperationCompleted);
            }
            this.InvokeAsync("CheckOut", new object[] {
                        customerNo}, this.CheckOutOperationCompleted, userState);
        }
        
        private void OnCheckOutOperationCompleted(object arg) {
            if ((this.CheckOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOutCompleted(this, new CheckOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:CreateCustomerAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="CreateCustomerAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateCustomerAccount(string customerNumber) {
            object[] results = this.Invoke("CreateCustomerAccount", new object[] {
                        customerNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAccountAsync(string customerNumber) {
            this.CreateCustomerAccountAsync(customerNumber, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAccountAsync(string customerNumber, object userState) {
            if ((this.CreateCustomerAccountOperationCompleted == null)) {
                this.CreateCustomerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerAccountOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerAccount", new object[] {
                        customerNumber}, this.CreateCustomerAccountOperationCompleted, userState);
        }
        
        private void OnCreateCustomerAccountOperationCompleted(object arg) {
            if ((this.CreateCustomerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerAccountCompleted(this, new CreateCustomerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string email, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        email,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string email, string currentPassword, string newPassword, string confirmPassword) {
            this.ResetPasswordAsync(email, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string email, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        email,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:GetCustomerStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="GetCustomerStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCustomerStatement(string customerNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateForm, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("GetCustomerStatement", new object[] {
                        customerNo,
                        dateForm,
                        dateTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerStatementAsync(string customerNo, System.DateTime dateForm, System.DateTime dateTo) {
            this.GetCustomerStatementAsync(customerNo, dateForm, dateTo, null);
        }
        
        /// <remarks/>
        public void GetCustomerStatementAsync(string customerNo, System.DateTime dateForm, System.DateTime dateTo, object userState) {
            if ((this.GetCustomerStatementOperationCompleted == null)) {
                this.GetCustomerStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerStatementOperationCompleted);
            }
            this.InvokeAsync("GetCustomerStatement", new object[] {
                        customerNo,
                        dateForm,
                        dateTo}, this.GetCustomerStatementOperationCompleted, userState);
        }
        
        private void OnGetCustomerStatementOperationCompleted(object arg) {
            if ((this.GetCustomerStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerStatementCompleted(this, new GetCustomerStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:RemoveFromCart", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="RemoveFromCart_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFromCart(string customerNumber, int cartId) {
            object[] results = this.Invoke("RemoveFromCart", new object[] {
                        customerNumber,
                        cartId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFromCartAsync(string customerNumber, int cartId) {
            this.RemoveFromCartAsync(customerNumber, cartId, null);
        }
        
        /// <remarks/>
        public void RemoveFromCartAsync(string customerNumber, int cartId, object userState) {
            if ((this.RemoveFromCartOperationCompleted == null)) {
                this.RemoveFromCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromCartOperationCompleted);
            }
            this.InvokeAsync("RemoveFromCart", new object[] {
                        customerNumber,
                        cartId}, this.RemoveFromCartOperationCompleted, userState);
        }
        
        private void OnRemoveFromCartOperationCompleted(object arg) {
            if ((this.RemoveFromCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromCartCompleted(this, new RemoveFromCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:AddToWishList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="AddToWishList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddToWishList(string productId, string customerNo) {
            object[] results = this.Invoke("AddToWishList", new object[] {
                        productId,
                        customerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToWishListAsync(string productId, string customerNo) {
            this.AddToWishListAsync(productId, customerNo, null);
        }
        
        /// <remarks/>
        public void AddToWishListAsync(string productId, string customerNo, object userState) {
            if ((this.AddToWishListOperationCompleted == null)) {
                this.AddToWishListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToWishListOperationCompleted);
            }
            this.InvokeAsync("AddToWishList", new object[] {
                        productId,
                        customerNo}, this.AddToWishListOperationCompleted, userState);
        }
        
        private void OnAddToWishListOperationCompleted(object arg) {
            if ((this.AddToWishListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToWishListCompleted(this, new AddToWishListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:RequestHelp", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="RequestHelp_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RequestHelp(string customerNo, string subject, string message, string customerName, string customerEmail, string customerPhone) {
            object[] results = this.Invoke("RequestHelp", new object[] {
                        customerNo,
                        subject,
                        message,
                        customerName,
                        customerEmail,
                        customerPhone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestHelpAsync(string customerNo, string subject, string message, string customerName, string customerEmail, string customerPhone) {
            this.RequestHelpAsync(customerNo, subject, message, customerName, customerEmail, customerPhone, null);
        }
        
        /// <remarks/>
        public void RequestHelpAsync(string customerNo, string subject, string message, string customerName, string customerEmail, string customerPhone, object userState) {
            if ((this.RequestHelpOperationCompleted == null)) {
                this.RequestHelpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestHelpOperationCompleted);
            }
            this.InvokeAsync("RequestHelp", new object[] {
                        customerNo,
                        subject,
                        message,
                        customerName,
                        customerEmail,
                        customerPhone}, this.RequestHelpOperationCompleted, userState);
        }
        
        private void OnRequestHelpOperationCompleted(object arg) {
            if ((this.RequestHelpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestHelpCompleted(this, new RequestHelpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:RemoveFromWishlist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="RemoveFromWishlist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFromWishlist(string customerNumber, int cartId) {
            this.Invoke("RemoveFromWishlist", new object[] {
                        customerNumber,
                        cartId});
        }
        
        /// <remarks/>
        public void RemoveFromWishlistAsync(string customerNumber, int cartId) {
            this.RemoveFromWishlistAsync(customerNumber, cartId, null);
        }
        
        /// <remarks/>
        public void RemoveFromWishlistAsync(string customerNumber, int cartId, object userState) {
            if ((this.RemoveFromWishlistOperationCompleted == null)) {
                this.RemoveFromWishlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromWishlistOperationCompleted);
            }
            this.InvokeAsync("RemoveFromWishlist", new object[] {
                        customerNumber,
                        cartId}, this.RemoveFromWishlistOperationCompleted, userState);
        }
        
        private void OnRemoveFromWishlistOperationCompleted(object arg) {
            if ((this.RemoveFromWishlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromWishlistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:AddToCartFromWishlist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="AddToCartFromWishlist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddToCartFromWishlist(string customerNumber, int cartId) {
            object[] results = this.Invoke("AddToCartFromWishlist", new object[] {
                        customerNumber,
                        cartId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToCartFromWishlistAsync(string customerNumber, int cartId) {
            this.AddToCartFromWishlistAsync(customerNumber, cartId, null);
        }
        
        /// <remarks/>
        public void AddToCartFromWishlistAsync(string customerNumber, int cartId, object userState) {
            if ((this.AddToCartFromWishlistOperationCompleted == null)) {
                this.AddToCartFromWishlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToCartFromWishlistOperationCompleted);
            }
            this.InvokeAsync("AddToCartFromWishlist", new object[] {
                        customerNumber,
                        cartId}, this.AddToCartFromWishlistOperationCompleted, userState);
        }
        
        private void OnAddToCartFromWishlistOperationCompleted(object arg) {
            if ((this.AddToCartFromWishlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToCartFromWishlistCompleted(this, new AddToCartFromWishlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:GenerateInvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="GenerateInvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateInvoice(string customerNo, string invoiceNo) {
            object[] results = this.Invoke("GenerateInvoice", new object[] {
                        customerNo,
                        invoiceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateInvoiceAsync(string customerNo, string invoiceNo) {
            this.GenerateInvoiceAsync(customerNo, invoiceNo, null);
        }
        
        /// <remarks/>
        public void GenerateInvoiceAsync(string customerNo, string invoiceNo, object userState) {
            if ((this.GenerateInvoiceOperationCompleted == null)) {
                this.GenerateInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceOperationCompleted);
            }
            this.InvokeAsync("GenerateInvoice", new object[] {
                        customerNo,
                        invoiceNo}, this.GenerateInvoiceOperationCompleted, userState);
        }
        
        private void OnGenerateInvoiceOperationCompleted(object arg) {
            if ((this.GenerateInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateInvoiceCompleted(this, new GenerateInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:SendOrderNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="SendOrderNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendOrderNotification(string orderNo) {
            object[] results = this.Invoke("SendOrderNotification", new object[] {
                        orderNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrderNotificationAsync(string orderNo) {
            this.SendOrderNotificationAsync(orderNo, null);
        }
        
        /// <remarks/>
        public void SendOrderNotificationAsync(string orderNo, object userState) {
            if ((this.SendOrderNotificationOperationCompleted == null)) {
                this.SendOrderNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrderNotificationOperationCompleted);
            }
            this.InvokeAsync("SendOrderNotification", new object[] {
                        orderNo}, this.SendOrderNotificationOperationCompleted, userState);
        }
        
        private void OnSendOrderNotificationOperationCompleted(object arg) {
            if ((this.SendOrderNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrderNotificationCompleted(this, new SendOrderNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:ForgotPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="ForgotPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotPassword(string email) {
            object[] results = this.Invoke("ForgotPassword", new object[] {
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string email) {
            this.ForgotPasswordAsync(email, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string email, object userState) {
            if ((this.ForgotPasswordOperationCompleted == null)) {
                this.ForgotPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgotPassword", new object[] {
                        email}, this.ForgotPasswordOperationCompleted, userState);
        }
        
        private void OnForgotPasswordOperationCompleted(object arg) {
            if ((this.ForgotPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordCompleted(this, new ForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:FnShowpass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="FnShowpass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnShowpass(string custno) {
            object[] results = this.Invoke("FnShowpass", new object[] {
                        custno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnShowpassAsync(string custno) {
            this.FnShowpassAsync(custno, null);
        }
        
        /// <remarks/>
        public void FnShowpassAsync(string custno, object userState) {
            if ((this.FnShowpassOperationCompleted == null)) {
                this.FnShowpassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnShowpassOperationCompleted);
            }
            this.InvokeAsync("FnShowpass", new object[] {
                        custno}, this.FnShowpassOperationCompleted, userState);
        }
        
        private void OnFnShowpassOperationCompleted(object arg) {
            if ((this.FnShowpassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnShowpassCompleted(this, new FnShowpassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:FnBLOBCustomerStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="FnBLOBCustomerStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnBLOBCustomerStatement(string customerrNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, ref string bigText) {
            object[] results = this.Invoke("FnBLOBCustomerStatement", new object[] {
                        customerrNo,
                        dateFrom,
                        dateTo,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBLOBCustomerStatementAsync(string customerrNo, System.DateTime dateFrom, System.DateTime dateTo, string bigText) {
            this.FnBLOBCustomerStatementAsync(customerrNo, dateFrom, dateTo, bigText, null);
        }
        
        /// <remarks/>
        public void FnBLOBCustomerStatementAsync(string customerrNo, System.DateTime dateFrom, System.DateTime dateTo, string bigText, object userState) {
            if ((this.FnBLOBCustomerStatementOperationCompleted == null)) {
                this.FnBLOBCustomerStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBLOBCustomerStatementOperationCompleted);
            }
            this.InvokeAsync("FnBLOBCustomerStatement", new object[] {
                        customerrNo,
                        dateFrom,
                        dateTo,
                        bigText}, this.FnBLOBCustomerStatementOperationCompleted, userState);
        }
        
        private void OnFnBLOBCustomerStatementOperationCompleted(object arg) {
            if ((this.FnBLOBCustomerStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBLOBCustomerStatementCompleted(this, new FnBLOBCustomerStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:GetOrderShipmentStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="GetOrderShipmentStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOrderShipmentStatus(string orderNumber, string customerNumber) {
            object[] results = this.Invoke("GetOrderShipmentStatus", new object[] {
                        orderNumber,
                        customerNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderShipmentStatusAsync(string orderNumber, string customerNumber) {
            this.GetOrderShipmentStatusAsync(orderNumber, customerNumber, null);
        }
        
        /// <remarks/>
        public void GetOrderShipmentStatusAsync(string orderNumber, string customerNumber, object userState) {
            if ((this.GetOrderShipmentStatusOperationCompleted == null)) {
                this.GetOrderShipmentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderShipmentStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrderShipmentStatus", new object[] {
                        orderNumber,
                        customerNumber}, this.GetOrderShipmentStatusOperationCompleted, userState);
        }
        
        private void OnGetOrderShipmentStatusOperationCompleted(object arg) {
            if ((this.GetOrderShipmentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderShipmentStatusCompleted(this, new GetOrderShipmentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:FnRunJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="FnRunJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnRunJobs() {
            object[] results = this.Invoke("FnRunJobs", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnRunJobsAsync() {
            this.FnRunJobsAsync(null);
        }
        
        /// <remarks/>
        public void FnRunJobsAsync(object userState) {
            if ((this.FnRunJobsOperationCompleted == null)) {
                this.FnRunJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRunJobsOperationCompleted);
            }
            this.InvokeAsync("FnRunJobs", new object[0], this.FnRunJobsOperationCompleted, userState);
        }
        
        private void OnFnRunJobsOperationCompleted(object arg) {
            if ((this.FnRunJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRunJobsCompleted(this, new FnRunJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:ForgotWEmailPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="ForgotWEmailPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotWEmailPassword(string customerEmail) {
            object[] results = this.Invoke("ForgotWEmailPassword", new object[] {
                        customerEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotWEmailPasswordAsync(string customerEmail) {
            this.ForgotWEmailPasswordAsync(customerEmail, null);
        }
        
        /// <remarks/>
        public void ForgotWEmailPasswordAsync(string customerEmail, object userState) {
            if ((this.ForgotWEmailPasswordOperationCompleted == null)) {
                this.ForgotWEmailPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotWEmailPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgotWEmailPassword", new object[] {
                        customerEmail}, this.ForgotWEmailPasswordOperationCompleted, userState);
        }
        
        private void OnForgotWEmailPasswordOperationCompleted(object arg) {
            if ((this.ForgotWEmailPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotWEmailPasswordCompleted(this, new ForgotWEmailPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:FnRandomize", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="FnRandomize_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnRandomize() {
            object[] results = this.Invoke("FnRandomize", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnRandomizeAsync() {
            this.FnRandomizeAsync(null);
        }
        
        /// <remarks/>
        public void FnRandomizeAsync(object userState) {
            if ((this.FnRandomizeOperationCompleted == null)) {
                this.FnRandomizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRandomizeOperationCompleted);
            }
            this.InvokeAsync("FnRandomize", new object[0], this.FnRandomizeOperationCompleted, userState);
        }
        
        private void OnFnRandomizeOperationCompleted(object arg) {
            if ((this.FnRandomizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRandomizeCompleted(this, new FnRandomizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/ECommerce:FnRegister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", ResponseElementName="FnRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/ECommerce", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegister(string firstname, string lastname, string middlename, string phone, string email) {
            object[] results = this.Invoke("FnRegister", new object[] {
                        firstname,
                        lastname,
                        middlename,
                        phone,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterAsync(string firstname, string lastname, string middlename, string phone, string email) {
            this.FnRegisterAsync(firstname, lastname, middlename, phone, email, null);
        }
        
        /// <remarks/>
        public void FnRegisterAsync(string firstname, string lastname, string middlename, string phone, string email, object userState) {
            if ((this.FnRegisterOperationCompleted == null)) {
                this.FnRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterOperationCompleted);
            }
            this.InvokeAsync("FnRegister", new object[] {
                        firstname,
                        lastname,
                        middlename,
                        phone,
                        email}, this.FnRegisterOperationCompleted, userState);
        }
        
        private void OnFnRegisterOperationCompleted(object arg) {
            if ((this.FnRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterCompleted(this, new FnRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetItemImageCompletedEventHandler(object sender, GetItemImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddToCartCompletedEventHandler(object sender, AddToCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckOutCompletedEventHandler(object sender, CheckOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateCustomerAccountCompletedEventHandler(object sender, CreateCustomerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerStatementCompletedEventHandler(object sender, GetCustomerStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveFromCartCompletedEventHandler(object sender, RemoveFromCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFromCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFromCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddToWishListCompletedEventHandler(object sender, AddToWishListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToWishListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToWishListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestHelpCompletedEventHandler(object sender, RequestHelpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestHelpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestHelpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveFromWishlistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddToCartFromWishlistCompletedEventHandler(object sender, AddToCartFromWishlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToCartFromWishlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToCartFromWishlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateInvoiceCompletedEventHandler(object sender, GenerateInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendOrderNotificationCompletedEventHandler(object sender, SendOrderNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrderNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrderNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ForgotPasswordCompletedEventHandler(object sender, ForgotPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnShowpassCompletedEventHandler(object sender, FnShowpassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnShowpassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnShowpassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnBLOBCustomerStatementCompletedEventHandler(object sender, FnBLOBCustomerStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBLOBCustomerStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBLOBCustomerStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOrderShipmentStatusCompletedEventHandler(object sender, GetOrderShipmentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderShipmentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderShipmentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnRunJobsCompletedEventHandler(object sender, FnRunJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRunJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRunJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ForgotWEmailPasswordCompletedEventHandler(object sender, ForgotWEmailPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotWEmailPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotWEmailPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnRandomizeCompletedEventHandler(object sender, FnRandomizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRandomizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRandomizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnRegisterCompletedEventHandler(object sender, FnRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591